article.complex {
@include stdFlex(column, nowrap);
gap: 20px;

    width: 100%;
    max-width: 1300px;

    .particles {
        position: fixed;
        z-index: -2;
        left: 0;
        top: 0;

        height: 100vh;
        width: 100vw;
    }


    .entry {
    @include stdFlex(row, wrap, center);
    gap: 20px;

        width: 100%;
        height: 100vh;
        overflow: hidden;

        .elem {
            flex-basis: 90%;
            position: relative;

            button {
            @include stdTransition();

                &:hover {
                    color: $colorSecondary;
                }

                position: absolute;
                right: 8%;
                top: 15%;

                border: none;
                color: $colorPrimary;
                font-size: 72px;

                animation-name: rotateEaseIn;
                animation-fill-mode: both;
                animation-duration: 1.6s;
                animation-delay: 0.6s;
            }

            &.img {
                box-shadow: 0 10px 5px -5px $colorSecondary;
                border: 3*$borderThick solid transparent;
                border-bottom-color: darken($colorSecondary, 35%);
                transform: translateY(-30px);
            }
        }

        img {
            max-height: 100%;
            max-width: 70%;
        }

        h2 {
            flex-grow: 1;
            font-size: 32px;
            margin: $marginBig $marginSmall;
            width: 100%;

            &.right {text-align: left;}
            &.left {text-align: right;}
        }
    }

    section.grided {

        width: 100%;
        display: grid;
        grid-gap: 20px;
        grid-template-columns: (repeat(4, 1fr));
        grid-template-areas:
            ". elem_1 elem_1 elem_1"
            "elem_2 elem_2 elem_2 ."
            ". elem_3 elem_3 elem_3"
            "elem_4 elem_4 elem_4 ."
            ". elem_5 elem_5 elem_5"
            "elem_6 elem_6 elem_6 ."
        ;

        .elem {
        @include stdFlex(row, wrap);
        @include stdTransition();

            flex-grow: 1;
            border-radius: $radiusBig;
            margin: $marginBig $marginMedium;

            box-shadow: 0 0 20px -5px transparent;
            &:hover {
                transform: scale(1.1);
                box-shadow: 0 0 20px -5px $colorPrimary;
            }

            h3 {
            @include stdFlex(row, nowrap, center);

                width: 300px;
                min-height: 240px;
                color: $colorPrimary;
                font-size: 32px;
                font-weight: 700;
                text-align: center;

                background-attachment: unset;
                background-position: center center;
                background-repeat: no-repeat;
                background-size: contain;
            }

            &.__1{grid-area: elem_1; h3 {background-image: url('../../img/stains/stain_01.png');} justify-content: flex-end;}
            &.__2{grid-area: elem_2; h3 {background-image: url('../../img/stains/stain_04.png');} justify-content: flex-start;}
            &.__3{grid-area: elem_3; h3 {background-image: url('../../img/stains/stain_03.png');} justify-content: flex-end;}
            &.__4{grid-area: elem_4; h3 {background-image: url('../../img/stains/stain_02.png');} justify-content: flex-start;}
            &.__5{grid-area: elem_5; h3 {background-image: url('../../img/stains/stain_06.png');} justify-content: flex-end;}
            &.__6{grid-area: elem_6; h3 {background-image: url('../../img/stains/stain_05.png');} justify-content: flex-start;}
        }

        ul {
        @include stdFlex(row, wrap, center, stretch);
        gap: 15px;
            
            flex-grow: 1;
            list-style: none;
            
            li {
            @include stdBorder($colorSecondary, $radiusMax);
            @include stdTransition();

                flex-basis: 60%;
                font-size: 17px;
                text-align: center;
                padding: $paddingSmall $paddingBig;

                &:hover {
                    color: $colorPrimary;
                    border-color: $colorPrimary;
                    box-shadow: 0 0 10px $colorPrimary; 
                }
            }
        }

        p {
        @include stdText();
            
            flex-basis: 100%;
            font-size: 17px;
            padding: $paddingMedium;
        }
    }

    .bonus {

        max-width: 991px;
        margin: $marginBig $marginMedium;

        h3 {
            text-align: center;
            line-height: 140%;

            span {font-weight: 600;}
        }

        .list {
            list-style: none;

            li {
                margin: $marginMedium 0;
                font-size: 20px;
                letter-spacing: 1px;
                text-align: center;

                span {margin: 0 $marginSmall;}
                
                svg {
                    color: $colorSecondary;
                    font-size: 32px;
                }
            }
        }
    }
}

/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */
/*  Animations  */

@keyframes rotateEaseIn {
    from {
        opacity: 0;
        transform: translateY(200px) rotate(1080deg) scale(0);
    } to {
        opacity: 1;
        transform: translateY(0) rotate(0) scale(1);
    }
}

/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */
/*  Breakpoints */
    
@media (max-width: 991px) {
    
 
}
    
/*   *   *   *   *   *   *   *   *   *   */
    
@media (min-width: 992px) {
    
   
}
    